<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graphql.demo.graphqldemo.dao.BookDao">


	<resultMap id="bookResultMap"
		type="com.graphql.demo.graphqldemo.dto.Book">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="pageCount" column="page_count" />
		<result property="authorId" column="author_id" />
		<result property="delFlg" column="del_flg" />
		<!--<association property="author"
			javaType="com.graphql.demo.graphqldemo.dto.Author">
			<id property="id" column="id" />
			<result property="age" column="age" />
			<result property="sex" column="sex" />
			<result property="authorName" column="author_name" />
			<result property="delFlg" column="del_flg" />
		</association>-->
	</resultMap>

	<select id="getBookById" parameterType="java.lang.String"
		resultType="com.graphql.demo.graphqldemo.dto.Book"
		resultMap="bookResultMap">

		<!-- select
		A.*,B.*
		from book A
		inner join author B on A.author_id = B.id and
		B.del_flg = 0
		where A.del_flg = 0 and A.id = #{id} -->
		
		select *
		from book
		where del_flg = 0 and id = #{id}

	</select>

	<select id="getAllBooks" resultType="java.util.List"
		resultMap="bookResultMap">

		<!-- select
		A.*,B.*
		from book A
		inner join author B on A.author_id = B.id and
		B.del_flg = 0
		where A.del_flg = 0 -->
		
		select *
		from book
		where del_flg = 0;

	</select>

	<select id="getAllBooksOfAuthorById" resultType="java.util.List"
		resultMap="bookResultMap">

		select
		*
		from book
		where del_flg = 0 and author_id = #{id}

	</select>
	
	<select id="getAllBooksOfAuthorByIds" parameterType="java.util.List" resultType="java.util.List" resultMap="bookResultMap">
		select *
		from book
		where del_flg = 0 and author_id in
		<foreach item="item" collection="list" separator="," open="(" close=")" index="">
			#{item}
		</foreach>
	</select>

	<insert id="addBook" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.graphql.demo.graphqldemo.dto.Book">
		insert into book(name,page_count,author_id,del_flg)
		values (#{name}, #{pageCount}, #{authorId}, 0)
	</insert>

	<update id="updateBook" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.graphql.demo.graphqldemo.dto.Book">
		update book set name = #{name}, page_count =
		#{pageCount}, author_id = #{authorId} where id = #{id}
	</update>

	<update id="deleteBook" useGeneratedKeys="true" keyProperty="id"
		parameterType="java.lang.String">
		update book set del_flg = 1 where id = #{id}
	</update>

</mapper>